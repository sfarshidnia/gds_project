package nl.fontys.cryptoexchange.core;

/**
 * @author Ratidzo Zvirawa, Tobias Zobrist
 * @version 1.0
 * @created 04-Apr-2014 14:05:28
 */
public class CurrencyPair {

	private final Currency baseSymbol;
	private final Currency counterSymbol;

	 // Provide some default BTC major symbols
	  public static final CurrencyPair BTC_USD = new CurrencyPair(Currencies.BTC);
	  public static final CurrencyPair BTC_GBP = new CurrencyPair(Currencies.BTC, Currencies.GBP);
	  public static final CurrencyPair BTC_EUR = new CurrencyPair(Currencies.BTC, Currencies.EUR);
	  public static final CurrencyPair BTC_JPY = new CurrencyPair(Currencies.BTC, Currencies.JPY);
	  public static final CurrencyPair BTC_CHF = new CurrencyPair(Currencies.BTC, Currencies.CHF);
	  public static final CurrencyPair BTC_AUD = new CurrencyPair(Currencies.BTC, Currencies.AUD);
	  public static final CurrencyPair BTC_CAD = new CurrencyPair(Currencies.BTC, Currencies.CAD);
	  public static final CurrencyPair BTC_CNY = new CurrencyPair(Currencies.BTC, Currencies.CNY);
	  public static final CurrencyPair BTC_DKK = new CurrencyPair(Currencies.BTC, Currencies.DKK);
	  public static final CurrencyPair BTC_HKD = new CurrencyPair(Currencies.BTC, Currencies.HKD);
	  public static final CurrencyPair BTC_NZD = new CurrencyPair(Currencies.BTC, Currencies.NZD);
	  public static final CurrencyPair BTC_PLN = new CurrencyPair(Currencies.BTC, Currencies.PLN);
	  public static final CurrencyPair BTC_RUB = new CurrencyPair(Currencies.BTC, Currencies.RUB);
	  public static final CurrencyPair BTC_SEK = new CurrencyPair(Currencies.BTC, Currencies.SEK);
	  public static final CurrencyPair BTC_SGD = new CurrencyPair(Currencies.BTC, Currencies.SGD);
	  public static final CurrencyPair BTC_NOK = new CurrencyPair(Currencies.BTC, Currencies.NOK);
	  public static final CurrencyPair BTC_THB = new CurrencyPair(Currencies.BTC, Currencies.THB);
	  public static final CurrencyPair BTC_RUR = new CurrencyPair(Currencies.BTC, Currencies.RUR);
	  public static final CurrencyPair BTC_ZAR = new CurrencyPair(Currencies.BTC, Currencies.ZAR);
	  public static final CurrencyPair BTC_BRL = new CurrencyPair(Currencies.BTC, Currencies.BRL);
	  public static final CurrencyPair BTC_CZK = new CurrencyPair(Currencies.BTC, Currencies.CZK);
	  public static final CurrencyPair BTC_ILS = new CurrencyPair(Currencies.BTC, Currencies.ILS);
	  public static final CurrencyPair BTC_KRW = new CurrencyPair(Currencies.BTC, Currencies.KRW);
	  public static final CurrencyPair BTC_LTC = new CurrencyPair(Currencies.BTC, Currencies.LTC);
	  public static final CurrencyPair BTC_XRP = new CurrencyPair(Currencies.BTC, Currencies.XRP);
	  public static final CurrencyPair BTC_NMC = new CurrencyPair(Currencies.BTC, Currencies.NMC);
	  public static final CurrencyPair BTC_XVN = new CurrencyPair(Currencies.BTC, Currencies.XVN);
	
	/**
	 * this will create a new Currency pair. I f base symbol not specified BTC will be taken
	 * @param counterSymbol 
	 */
	public CurrencyPair(Currency counterSymbol)
	{
		this.counterSymbol = counterSymbol;
		this.baseSymbol = Currency.BTC;
	}
	
	/**
	 * this will create a new Currency pair. I f base symbol not specified BTC will be taken
	 * @param counterSymbol 
	 */
public CurrencyPair(Currency counterSymbol, Currency baseSymbol) {
	
	this.baseSymbol = baseSymbol;
	this.counterSymbol = counterSymbol;
}
	public void finalize() throws Throwable {

	}
	/**
	 * override existing!
	 * 
	 * @param currencyPair
	 */
	public boolean equals(CurrencyPair currencyPair){
		return false;
	}

	public Currency getBaseSymbol(){
		return null;
	}

	public Currency getCounterSymbol(){
		return null;
	}

	/**
	 * override this because we have equals! HashMaps or whatever need this!
	 */
	public int hashcode(){
		return 0;
	}

	/**
	 * override existing!
	 */
	public String toString(){
		return "";
	}
}//end CurrencyPair