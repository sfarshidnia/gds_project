package nl.fontys.cryptoexchange.engine;

/**
 * has a stack of threads and is doing the management of the TradeAgents
 * @author Tobias Zobrist
 * @version 1.0
 * @created 15-Apr-2014 15:53:09
 */
public class TradeEngineImplementation implements TradingEngine {

	/**
	 * collection of ask orders
	 */
	private OrderBook askOrderBook;
	/**
	 * This is a collection of the bidOrders
	 */
	private OrderBook bidOrderBook;
	private TemporaryTradeHistory temporaryTradeHistory;

	public TradeEngineImplementation(){

	}

	public void finalize() throws Throwable {

	}
	/**
	 * 
	 * @param userId
	 */
	public Iterator orders getPendingOrdersByUserId(long userId){
		return null;
	}

	public Iterator list getBidDepth(){
		return null;
	}

	public Iterator list getAskDepth(){
		return null;
	}

	/**
	 * 
	 * @param order
	 */
	public boolean cancelOrderByOrder(Order order){
		return false;
	}

	public JSONObject getAskDepthAsJSON(){
		return null;
	}

	public JSONObject getBidDEpthAsJSON(){
		return null;
	}

	/**
	 * 
	 * @param order
	 */
	public void placeOrder(Order order){

	}

	/**
	 * this will return you the last executed trade and from the trade you can get the
	 * price
	 */
	public Trade getLastTrade(){
		return null;
	}

	/**
	 * 
	 * @param orderId
	 */
	public boolean cancelOrderById(long orderId){
		return false;
	}

	/**
	 * will return the whole market depth
	 */
	public Iterator list getMarketDepth(){
		return null;
	}
	/* Begin - EA generated code for Parts and Ports */
	public String Port1 ;
	/* End - EA generated code for Parts and Ports */
}//end TradeEngineImplementation